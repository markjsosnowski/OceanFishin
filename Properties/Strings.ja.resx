<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="All possible area information at once." xml:space="preserve">
    <value>一度にすべての可能なエリア情報。</value>
  </data>
  <data name="Alternate command" xml:space="preserve">
    <value>代替コマンド</value>
  </data>
  <data name="alt_help_message" xml:space="preserve">
    <value>代替コマンド</value>
  </data>
  <data name="Balloons" xml:space="preserve">
    <value>バルーン</value>
  </data>
  <data name="Best spectral chance" xml:space="preserve">
    <value>ファントム電流確率</value>
  </data>
  <data name="Boarding is open for" xml:space="preserve">
    <value>乗船時間</value>
  </data>
  <data name="Comprehensive" xml:space="preserve">
    <value>包括的</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>コンフィグ</value>
  </data>
  <data name="Consider Donating" xml:space="preserve">
    <value>寄付を検討する</value>
  </data>
  <data name="Crabs" xml:space="preserve">
    <value>カニ</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="Determines the single, best choice for you." xml:space="preserve">
    <value>最良の選択のみを決定します。</value>
  </data>
  <data name="Did this plugin help you?" xml:space="preserve">
    <value>このプラグインは役に立ちましたか?</value>
  </data>
  <data name="Display Mode" xml:space="preserve">
    <value>ディスプレイモード</value>
  </data>
  <data name="Displays bait suggestions" xml:space="preserve">
    <value>エサの提案を見る</value>
  </data>
  <data name="Fugu" xml:space="preserve">
    <value>フグ</value>
  </data>
  <data name="help_message" xml:space="preserve">
    <value>エサの提案を見る</value>
  </data>
  <data name="High Points" xml:space="preserve">
    <value>高得点</value>
  </data>
  <data name="Highlight recommended bait in your inventory" xml:space="preserve">
    <value>インベントリの推奨事項を強調表示する</value>
  </data>
  <data name="hour" xml:space="preserve">
    <value>時間</value>
  </data>
  <data name="I suggest" xml:space="preserve">
    <value>私は提案します</value>
  </data>
  <data name="Include suggestions for mission and achievement fish." xml:space="preserve">
    <value>ミッションの推奨事項を含める。</value>
  </data>
  <data name="Jellyfish" xml:space="preserve">
    <value>クラゲ</value>
  </data>
  <data name="less than a minute!" xml:space="preserve">
    <value>一分未満！</value>
  </data>
  <data name="Mantas" xml:space="preserve">
    <value>アカエイ</value>
  </data>
  <data name="Minimal" xml:space="preserve">
    <value>最小限の</value>
  </data>
  <data name="minutes" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="Mission Fish" xml:space="preserve">
    <value>ミッションの魚</value>
  </data>
  <data name="Octopodes" xml:space="preserve">
    <value>タコ</value>
  </data>
  <data name="Seahorses" xml:space="preserve">
    <value>タツノオトシゴ</value>
  </data>
  <data name="Sharks" xml:space="preserve">
    <value>サメ</value>
  </data>
  <data name="Spectral Current" xml:space="preserve">
    <value>幻海流</value>
  </data>
  <data name="Suggestions based on current conditions." xml:space="preserve">
    <value>現状を踏まえたご提案。</value>
  </data>
  <data name="Suggestions will appear here during Ocean Fishing" xml:space="preserve">
    <value>「オーシャンフィッシング」の提案がここに表示されます</value>
  </data>
  <data name="The next boat leaves in" xml:space="preserve">
    <value>次の船が出ます</value>
  </data>
  <data name="Waiting for location..." xml:space="preserve">
    <value>ファントム電流確率...</value>
  </data>
</root>